import 'dart:async';import 'package:driver/Firebase/controller/auth_controller.dart';import 'package:driver/Firebase/controller/verification_controller/eamil_verify_controller.dart';import 'package:driver/widgets/appButton.dart';import 'package:driver/widgets/app_inputs.dart';import 'package:driver/widgets/resend_otp.dart';import 'package:flutter/material.dart';import 'package:otp_text_field/otp_text_field.dart';import 'package:otp_text_field/style.dart';import '../../utilitys/colors.dart';class EmailVerification extends StatefulWidget {  final String email;  const EmailVerification({Key? key, required this.email}) : super(key: key);  @override  State<EmailVerification> createState() => _EmailVerificationState();}class _EmailVerificationState extends State<EmailVerification> {  final _email = TextEditingController();var otp;  @override  void initState() {    // TODO: implement initState    super.initState();    _email.text = "${widget.email}";  }  bool _isLoading = false;  bool _isShowOTP = false;  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: AppColors.mainBg,      appBar: AppBar(        backgroundColor: Color(0xffF3F3F3),        elevation: 0,        title: const Text("Email Verification Center",          style: TextStyle(              color: AppColors.black,              fontSize: 19          ),        ),        leading: InkWell(            onTap: ()=>Navigator.pop(context),            child: Container(              width: 40,              height: 40,              margin: EdgeInsets.all(10),              decoration: BoxDecoration(                color: Color(0xffD9D9D9),                borderRadius: BorderRadius.circular(5),              ),              child: Center(                child: Icon(Icons.arrow_back, color: AppColors.black, size: 20,),              ),            )),      ),      body: SingleChildScrollView(        padding: EdgeInsets.all(20),        child: Form(          child: Column(            children: [              AppInput(title: "Your register email", hintText: "Enter your register email", controller: _email, ),              SizedBox(height: 20,),              _isShowOTP ? _OTPFeildShowWidget() :  AppButton(text: "Sent OTP", onClick: ()async{                setState(() => _isLoading  = true);                bool response = await EmailVerificationController.sendOTPIntoEmail(email: widget.email);                if(response){                  //SHOW OTP FEILD;                  //SHOW OTP FEILD;                  setState(() {                    _isShowOTP = true;                  });                }                setState(() => _isLoading  = false);              },              isLoading: _isLoading,              )            ],          ),        ),      ),    );  }   Widget _OTPFeildShowWidget() {    return Column(      mainAxisAlignment: MainAxisAlignment.start,      crossAxisAlignment: CrossAxisAlignment.start,      children:  [        Text("OTP Send",          style: TextStyle(              color: AppColors.black,              fontSize: 17,              fontWeight: FontWeight.w600          ),        ),        SizedBox(height: 10,),        Text("We send 4 digit OTP code into your email. Check your email and type here your otp code.",          style: TextStyle(            fontWeight: FontWeight.w400,            fontSize: 13,          ),        ),        SizedBox(height: 20,),        OTPTextField(          length: 4,          width: MediaQuery.of(context).size.width*.60,          fieldWidth: 50,          style: TextStyle(              fontSize: 17          ),          textFieldAlignment: MainAxisAlignment.spaceAround,          fieldStyle: FieldStyle.box,          onCompleted: (pin) {            print("Completed: " + pin);            setState(() {              otp = pin;            });          },        ),        SizedBox(height: 20,),        AppButton(text: "Verify", onClick: ()async{          setState(() => _isLoading  = true);          bool response = await EmailVerificationController.verifyEmailOtp(OTP: otp.toString(), context: context);          if(response){            //SHOW OTP FEILD;            _isShowOTP = false;          }          setState(() => _isLoading  = false);        },          isLoading: _isLoading,          width: 130,        ),        SizedBox(height: 20,),        ResendOtp(onClick: ()async{          setState(() => _isLoading  = true);          bool response = await EmailVerificationController.sendOTPIntoEmail(email: widget!.email);          if(response){            //SHOW OTP FEILD;            setState(() {              _isShowOTP = true;            });          }          setState(() => _isLoading  = false);        },)      ],    );   }}