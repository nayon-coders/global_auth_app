import 'package:cloud_firestore/cloud_firestore.dart';import 'package:driver/utilitys/colors.dart';import 'package:driver/view/auth/login.dart';import 'package:driver/view/setting/screens/request_vehicle_list.dart';import 'package:driver/view/setting/widgets/profile_menus.dart';import 'package:driver/view/verification_center/account_vefiy.dart';import 'package:driver/view/verification_center/email_verification.dart';import 'package:driver/widgets/appButton.dart';import 'package:driver/widgets/app_network_image.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import '../../../widgets/un_authonticate_user.dart';class Settings extends StatefulWidget {  const Settings({Key? key}) : super(key: key);  @override  State<Settings> createState() => _SettingsState();}class _SettingsState extends State<Settings> {   final FirebaseAuth _auth = FirebaseAuth.instance;   final FirebaseFirestore _firestore = FirebaseFirestore.instance;  ///  ///============ get user profile  bool isEmailVerify = false;  bool isPhoneVerify = false;  bool isAccountVerify = false;  bool isLoading = false;  @override  void initState() {    // TODO: implement initState    super.initState();  }  @override  Widget build(BuildContext context) {    var size = MediaQuery.of(context).size;     return _auth.currentUser == null        ? UnAuthonticateUser()        :  StreamBuilder(        stream: _firestore.collection('drivers_profile').doc(_auth.currentUser!.email).snapshots(),        builder: (context, snapshot) {          if(snapshot.connectionState == ConnectionState.waiting){            return const Center(child: CircularProgressIndicator(color: AppColors.mainColor,),);          }else if(snapshot.hasData){            print("dadadsf=== ${snapshot.data!.data()}");            return SingleChildScrollView(              padding: EdgeInsets.all(20),              child: Column(                mainAxisAlignment: MainAxisAlignment.start,                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  Text("My Profile",                    style: TextStyle(                        fontWeight: FontWeight.w600,                        fontSize: 20,                        color: AppColors.black                    ),                  ),                  SizedBox(height: 20,),                  Center(                    child: ClipRRect(                      borderRadius: BorderRadius.circular(100),                      child: AppNetWorkImage(url: "https://img.freepik.com/free-photo/man-car-driving_23-2148889981.jpg", height: 150, width: 150),                    ),                  ),                  ///                  ///                  ///                  ///======== verification center ====================                  SizedBox(height: 20,),                  const Text("Verification Center",                    style: TextStyle(                        fontWeight: FontWeight.w600,                        fontSize: 19,                        color: AppColors.black                    ),                  ),                  ProfileMenus(                    leadingIcon: Icons.email_outlined,                    onClick: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=>EmailVerification(email: _auth!.currentUser!.email!,))),                    trailingIcon: Icons.verified_user,                    trailingIconColor: snapshot.data!.data()!["email_verify"] == "1" ? Colors.green : Colors.red,                    text: "Email Verify",                  ),                  ProfileMenus(                    leadingIcon: Icons.phone_android,                    onClick: (){},                    // onClick: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=>AccountVerification())),                    trailingIcon: Icons.verified_user,                    trailingIconColor: snapshot.data!.data()!["phone_verify"] == "0" ? Colors.red : Colors.green,                    text: "Phone Number Verify",                  ),                  ProfileMenus(                    leadingIcon: Icons.account_box_rounded,                    onClick: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=>AccountVerification())),                    trailingIcon: Icons.verified_user,                    trailingIconColor: snapshot.data!.data()!["account_verify"] == "0" ? Colors.red : Colors.green,                    text: "Account Verify",                  ),                  SizedBox(height: 20,),                  Text("Services",                    style: TextStyle(                        fontWeight: FontWeight.w600,                        fontSize: 19,                        color: AppColors.black                    ),                  ),                  ProfileMenus(                    leadingIcon: CupertinoIcons.car,                    onClick: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=>RequestVehiclesList())),                    text: "Request Vehicle's",                  ),                  ProfileMenus(                    leadingIcon: CupertinoIcons.car,                    onClick: (){},                    text: "My Vehicle",                  ),                  ProfileMenus(                    leadingIcon: CupertinoIcons.money_dollar_circle,                    onClick: (){},                    text: "Payment Histry",                  ),                  SizedBox(height: 20,),                  Text("Settings",                    style: TextStyle(                        fontWeight: FontWeight.w600,                        fontSize: 19,                        color: AppColors.black                    ),                  ),                  SizedBox(height: 10,),                  ProfileMenus(                    leadingIcon: Icons.person,                    onClick: (){},                    text: "Change Information",                  ),                  ProfileMenus(                    leadingIcon: Icons.key,                    onClick: (){},                    text: "Change Password",                  ),                  ProfileMenus(                    leadingIcon: Icons.notifications_active,                    onClick: (){},                    text: "Notification Setting",                  ),                  ProfileMenus(                    leadingIcon: Icons.logout,                    onClick: (){},                    text: "Logout Out",                  ),                  ProfileMenus(                    leadingIcon: Icons.logout,                    onClick: (){},                    text: "Delete Account",                  )                ],              ),            );          }else{            return Center(child: Text("Something went wrong with Server"),);          }        }    );  }}