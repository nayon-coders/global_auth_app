import 'package:cloud_firestore/cloud_firestore.dart';import 'package:driver/Firebase/controller/car_rent_controller.dart';import 'package:driver/utilitys/colors.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';import 'appButton.dart';import 'app_network_image.dart';class CarListView extends StatefulWidget {  const CarListView({    super.key,    required this.size, required this.carId,  required this.name, required this.amount, required this.rentVeriant, required this.rentReviews, required this.totalReviews, required this.onAddFav, required this.image, this.isFav = false, required this.onClick, required this.data,  });  final Size size;  final dynamic data;  final String image;  final String name;  final String amount;  final String rentVeriant;  final String rentReviews;  final String totalReviews;  final VoidCallback onAddFav;  final VoidCallback onClick;  final bool isFav;  final dynamic carId;  @override  State<CarListView> createState() => _CarListViewState();}class _CarListViewState extends State<CarListView> {  bool _isFav = false; //check if this car is in wishlist or not  bool _isAddingToFav = false;  final _firestore = FirebaseFirestore.instance;  final _auth = FirebaseAuth.instance;  @override  void initState() {    // TODO: implement initState    super.initState();    _checkIsFavOrNot();  }  _checkIsFavOrNot()async{    _firestore.collection("drivers_wishlist").get().then((value) {      if(value.docs.isNotEmpty) {        for (var i = 0; i < value.docs.length; i++) {          if (value.docs[i].data()["car_info"]["id"] == widget.carId) {            print(" widget.carId ${widget.carId}");            print(" widget.carId ${value.docs[i].data()["car_info"]["car_id"]}");            setState(() => _isFav = true);          }        }      }    });  }  @override  Widget build(BuildContext context) {    return InkWell(      onTap: widget.onClick,      child: Container(        width: widget.size.width,        padding: EdgeInsets.all(10),        margin: EdgeInsets.only(bottom: 20,left: 5, right: 5),        decoration: BoxDecoration(            color: AppColors.white,            borderRadius: BorderRadius.circular(10),            boxShadow: [              BoxShadow(                  color: Colors.grey.shade200,                  spreadRadius: 3, blurRadius: 5, offset: Offset(0,1)              )            ]        ),        child: Row(          children:  [            SizedBox(width: 130, child: AppNetWorkImage(url: "${widget.image}", height: 130, width: 130, boxFit: BoxFit.contain, )),            SizedBox(width: 10,),            Expanded(child: Column(              mainAxisAlignment: MainAxisAlignment.start,              crossAxisAlignment: CrossAxisAlignment.start,              children:  [                Text("${widget.name}",                  style: TextStyle(                  fontWeight: FontWeight.w600,                  fontSize: 16,                  color: AppColors.black                  ),                ),                SizedBox(height: 10,),                RichText(                    text: TextSpan(                        children: [                          TextSpan(                              text: "\$${widget.amount}",                              style: TextStyle(                                  fontSize: 14,                                  fontWeight: FontWeight.w600,                                  color: AppColors.black                              )                          ),                          TextSpan(                              text: "/${widget.rentVeriant}",                              style: TextStyle(                                  fontSize: 14,                                  fontWeight: FontWeight.w400,                                  color: Colors.grey                              )                          )                        ]                    )                ),                SizedBox(height: 10,),                Row(                  children: [                    Icon(Icons.star, color: Colors.amber, size: 20,),                    SizedBox(width: 3,),                    Text("${widget.rentReviews}",                        style: TextStyle(                            fontSize: 14,                            fontWeight: FontWeight.w400,                            color: Colors.grey                        )                    ),                    SizedBox(width: 3,),                    Text("(${widget.totalReviews})",                        style: TextStyle(                            fontSize: 14,                            fontWeight: FontWeight.w400,                            color: Colors.grey                        )                    )                  ],                ),                SizedBox(height: 10,),                SizedBox(                    width: widget.size.width*.45,                    child: Row(                  mainAxisAlignment: MainAxisAlignment.spaceBetween,                  children: [                    AppButton(                        width: 100,                        height: 35,                        fontSize: 13,                        text: "Rent Now",                        onClick: (){}                    ),                    InkWell(                      onTap: ()async{                        setState(()=> _isAddingToFav = true);                        if(_isFav){                          await _firestore.collection("driver_wishlist").get().then((value) {                            if(value.docs.isNotEmpty) {                              for (var i = 0; i < value.docs.length; i++) {                                print("value.docs[i].id.toString() ${value.docs[i].id.toString()}");                                if (value.docs[i].data()["car_info"]["car_id"] == widget.carId) {                                  _firestore.collection("driver_wishlist").doc(value.docs[i].id.toString()).delete();                                }                              }                            }                          });                        }else{                          await FirebaseCarRentController.addToFavorite(data:  widget.data);                        }                        _checkIsFavOrNot();                        setState(()=> _isAddingToFav = false);                      },                      child: _isAddingToFav ? CircularProgressIndicator(strokeWidth: 1,) : Icon(Icons.favorite, color: _isFav == true ? AppColors.red : Colors.grey,),                    )                  ],                ))              ],            ))          ],        ),      ),    );  }}